Scheduler - Shortest job-time first

i)
Find the process with shortest job-time. 
Run the selected process until job is complete.
Repeat until all processes have been completed.

ii)
Strong when the number of processes completed is the most important metric.
Processes will be completed sooner, as high job-time processes don't use time that could be spent on processes with lower job-times. 

iii)
Weak in situations where processes need to be completed soon after arrival.
This is because starvation of processes with large job-times can occur if processes with shorter job-times keep arriving and being executed with preference.

-----------------------------------------------------------------------------------------------------------------------------------------------------
Memory manager - Virtual memory, evict from most recent process

i) 
Load MIN(free memory, memory requirement) to selected process. 
If the process doesn't have MIN(16KB, memory requirement) memory available, swap memory from the most recently used process until it does.

ii) 
This is an optimal management algorithm when the most recently used process is also the furthest away from being run again. This makes it strong with round-robin scheduling.

iii) 
Weaker in situations where some processes are executed more frequently than others, as removing pages from the most recently executed process will result in the frequently executed processes constantly reloading pages.
