Custom scheduler - load shortest first

i) Algorithm:
Find the process with shortest job-time. Run the selected process until job is complete.R repeat until all processes have been completed.

ii) Strengths:
This algorithm is strong in situations where the number of processes completed is the most important metric.
Processes will be completed earlier, as large job-time processes will not stand in the way of the execution of processes with lower job-times. 

iii) Weaknesses:
This algorithm perfoms poorly in situations where processes need to be executed and completed soon after being launched.
This is because starvation of processes with large job-times can occur if processes with shorter job-times keep arriving, as they will always be executed in preference to large job-time processes.

-----------------------------------------------------------------------------------------------------------------------------------------------------

Custom memory manager - Virtual memory with most recently used first

i) Algorithm:
Load as much free memory as possible to selected process. 
If the process doesn't have MIN(16KB, process memory requirement) memory available, free memory from processes until it is.
Processes should be freed in order from most recently used to least recently used.

ii) Strengths:
Memory is freed from processes that won't be used for a long time.

iii) Weaknesses:
Suffers general weaknesses of virtual memory.
